(ns project-euler-clojure.problem2)

; Each new term in the Fibonacci sequence is generated by adding the previous two terms.
; By starting with 1 and 2, the first 10 terms will be:
; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
; By considering the terms in the Fibonacci sequence whose values do not exceed four million,
; find the sum of the even-valued terms.

(defn fib [n]
  (into []
    (map first
      (take n
        (iterate (fn [[a b]] [b (+ a b)]) [1 2])))))

(defn nth-fib [n] (last (fib n)))

(defn fibs-less-than [n]
  (loop [counter 1 terms []]
    (let [next-fib (nth-fib counter)]
      (cond
        (>= next-fib n) terms
        :else (recur (inc counter) (conj terms next-fib))))))

(defn solution [n]
  (apply + (filter even? (fibs-less-than n))))

(solution 4000000)